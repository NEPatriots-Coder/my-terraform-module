# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
# Ignore Terraform local state and cache
.terraform/
terraform.tfstate
terraform.tfstate.backup

# Ignore Terraform plan files
*.tfplan

# Ignore IDE and editor files
.vscode/
.idea/
*.swp
*.swo

# Ignore build and test artifacts
*.log
*.out
dist/
build/

# Ignore Terratest and test outputs
terratest/*.test
tests/*.log
examples/*/tests/*.tftest.hcl
examples/*/tests/*.log

# Ignore local environment files
.env
*.env

# Ignore Python virtual environment (if applicable, though you're using a project-specific venv)
venv/
__pycache__/

# Ignore any OS-generated files
.DS_Store
Thumbs.db
*.zip
*.tar.gz
*.tgz